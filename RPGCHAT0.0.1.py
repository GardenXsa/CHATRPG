import asyncio
import random
import string

from pywebio import start_server
from pywebio.input import *
from pywebio.output import *
from pywebio.session import defer_call, info as session_info, run_async, run_js

chat_msgs = []
online_users = {}
teams = {}
world_events = []  # –°–ø–∏—Å–æ–∫ —Å–æ–±—ã—Ç–∏–π –≤ –º–∏—Ä–µ

MAX_MESSAGES_COUNT = 100

async def main():
    global chat_msgs
    
    put_markdown("## üó°Ô∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ RPG –ß–∞—Ç!\n–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –¥–∞–Ω–Ω–æ–≥–æ —á–∞—Ç–∞ —É–∫–ª–∞–¥—ã–≤–∞–µ—Ç—Å—è –≤ 100 —Å—Ç—Ä–æ–∫ –∫–æ–¥–∞!")

    msg_box = output()
    put_scrollable(msg_box, height=300, keep_bottom=True)

    nickname = await input("‚öîÔ∏è –í–æ–π—Ç–∏ –≤ —á–∞—Ç", required=True, placeholder="–í–∞—à–µ –∏–º—è", validate=lambda n: "–¢–∞–∫–æ–π –Ω–∏–∫ —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è!" if n in online_users or n == 'üì¢' else None)
    online_users[nickname] = {
        'team': None,
        'is_leader': False
    }

    chat_msgs.append(('üì¢', f'{nickname} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —á–∞—Ç—É!'))
    msg_box.append(put_markdown(f'üì¢ {nickname} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —á–∞—Ç—É'))

    refresh_task = run_async(refresh_msg(nickname, msg_box))

    while True:
        data = await input_group("üí¨ –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", [
            input(placeholder="–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è ...", name="msg"),
            actions(name="cmd", buttons=["–û—Ç–ø—Ä–∞–≤–∏—Ç—å üì©", {'label': "–í—ã–π—Ç–∏ –∏–∑ —á–∞—Ç–∞", 'type': 'cancel'}])
        ], validate = lambda m: ('msg', "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è!") if m["cmd"] == "–û—Ç–ø—Ä–∞–≤–∏—Ç—å üì©" and not m['msg'] else None)

        if data is None:
            break

        if data['msg'].lower().startswith('/battle '):
            battle_cmd = data['msg'].split()

            try:
                team_size = int(battle_cmd[1])
                team_count = int(battle_cmd[2])
                if team_size < 1 or team_count < 1 or team_count > 7:
                    raise ValueError
            except (IndexError, ValueError):
                msg_box.append(put_markdown(f"‚öîÔ∏è {nickname}: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –±–∏—Ç–≤—ã!"))
                continue

            if len(online_users) - len(teams) < team_size * team_count:
                msg_box.append(put_markdown(f"‚öîÔ∏è {nickname}: –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è –±–∏—Ç–≤—ã!"))
                continue

            if online_users[nickname]['team']:
                msg_box.append(put_markdown(f"‚öîÔ∏è {nickname}: –í—ã —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∫–æ–º–∞–Ω–¥–µ!"))
                continue

            team_name = await input("‚öîÔ∏è –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã", required=True, placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ")
            team_color = ''.join(random.choices(string.hexdigits[:-6], k=6))
            team_num = len(teams) + 1
            teams[team_num] = {
                'name': team_name,
                'color': team_color,
                'leader': nickname
            }
            online_users[nickname]['team'] = team_num
            online_users[nickname]['is_leader'] = True

            msg_box.append(put_markdown(f"‚öîÔ∏è {nickname}: –°–æ–∑–¥–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ {team_num} - {team_name}!"))

            if len(teams) == team_count * team_size:
                battle_teams = [[] for _ in range(team_count)]
                for name, user_data in online_users.items():
                    team_num = user_data['team']
                    if team_num:
                        battle_teams[(team_num - 1) % team_count].append(name)
                
                random.shuffle(battle_teams)
                msg_box.append(put_markdown(f"‚öîÔ∏è –ë–∏—Ç–≤–∞ –Ω–∞—á–∞–ª–∞—Å—å!"))
                for i, team in enumerate(battle_teams, 1):
                    team_name = teams[i]['name']
                    team_color = teams[i]['color']
                    msg_box.append(put_markdown(f'<span style="color: #{team_color}">‚öîÔ∏è –ö–æ–º–∞–Ω–¥–∞ {i} - {team_name}: {", ".join(team)}</span>'))
                teams.clear()
                online_users.clear()
                continue

        if data['msg'].lower().startswith('/world'):
            await add_world_event(nickname, msg_box)

        msg_box.append(put_markdown(f"{nickname}: {data['msg']}"))
        chat_msgs.append((nickname, data['msg']))

    refresh_task.close()

async def refresh_msg(nickname, msg_box):
    last_idx = len(chat_msgs)
    while True:
        msgs = chat_msgs[last_idx:]
        last_idx = len(chat_msgs)
        for role, msg in msgs:
            if role == 'üì¢':
                msg_box.append(put_markdown(f'üì¢ {msg}'))
            elif role == 'üåç':
                msg_box.append(put_markdown(f'üåç {msg}'))
            else:
                msg_box.append(put_markdown(f'{role}: {msg}'))
        await asyncio.sleep(0.1)

async def add_world_event(nickname, msg_box):
    event_name = await input("üåç –ù–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è", required=True, placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è")
    event_description = await textarea("üìù –û–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è", required=True, placeholder="–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è")
    
    world_events.append((event_name, event_description))
    msg_box.append(put_markdown(f"üåç {event_name}: {event_description}"))
    chat_msgs.append(('üåç', f"{event_name}: {event_description}"))

start_server(main, port=8080)